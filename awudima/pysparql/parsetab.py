
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND ASC ASK BOOLEAN BOUND BY BYTE COLON COMA CONSTANT CONSTRUCT CONTAINS DATATYPE DATETIME DECIMAL DECIMALCONST DESC DISTINCT DIV DOUBLE DOUBLECONST EQUALS FALSE FILTER FLOAT GREATER GREATEREQ ID INT INTEGER ISBLANK ISIRI ISLITERAL ISURI LANG LANGMATCHES LCASE LESS LESSEQ LIMIT LKEY LONG LPAR MINUS NEG NEGATIVEINT NEQUALS NONNEGINT NONPOSINT NUMBER OFFSET OPTIONAL OR ORDER PLUS POINT POSITIVEINT PREFIX REGEX RKEY RPAR SAMETERM SELECT SHORT STR STRING TIMES TRUE UCASE UNION UNSIGNEDBYTE UNSIGNEDINT UNSIGNEDLONG UNSIGNEDSHORT UPPERCASE URI VARIABLE WHERE\n    parse_sparql : prefix_list query order_by limit offset\n    \n    parse_sparql : prefix_list query order_by offset limit\n    \n    parse_sparql : prefix_list construct_query order_by offset limit\n    \n    construct_query : CONSTRUCT template_block WHERE LKEY group_graph_pattern RKEY\n    \n    template_block : LKEY temp_bgp RKEY\n    \n    template_block : empty\n    \n    temp_bgp : triple rest_temp_bgp\n    \n    rest_temp_bgp : empty\n    \n    rest_temp_bgp : POINT triple rest_temp_bgp\n    \n    rest_temp_bgp : POINT rest_temp_bgp\n    \n    prefix_list : prefix prefix_list\n    \n    prefix_list : empty\n    \n    empty :\n    \n    prefix : PREFIX uri\n    \n    uri : ID COLON ID\n    \n    uri : ID COLON URI\n    \n    uri : URI\n    \n    order_by : ORDER BY var_order_list desc_var\n    \n    order_by : empty\n    \n    var_order_list : empty\n    \n    var_order_list : var_order_list desc_var\n    \n    desc_var : DESC LPAR VARIABLE RPAR\n    \n    desc_var : VARIABLE\n    \n    desc_var : ASC LPAR VARIABLE RPAR\n    \n    desc_var : unary_func LPAR desc_var RPAR\n    \n    limit : LIMIT NUMBER\n    \n    limit : empty\n    \n    offset : OFFSET NUMBER\n    \n    offset : empty\n    \n    query : SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY\n    \n    query : SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY\n    \n    query : ASK WHERE LKEY group_graph_pattern RKEY\n    \n    query : ASK LKEY group_graph_pattern RKEY\n    \n    distinct : DISTINCT\n    \n    distinct : empty\n    \n    group_graph_pattern : union_block\n    \n    union_block : pjoin_block rest_union_block POINT pjoin_block\n    \n    union_block : pjoin_block rest_union_block pjoin_block\n    \n    union_block : pjoin_block rest_union_block\n    \n    pjoin_block : LKEY join_block RKEY\n    \n    pjoin_block : join_block\n    \n    pjoin_block : empty\n    \n    rest_union_block : empty\n    \n    rest_union_block : UNION LKEY join_block rest_union_block RKEY rest_union_block\n    \n    join_block : LKEY union_block RKEY rest_join_block\n    \n    join_block : bgp rest_join_block\n    \n    rest_join_block : empty\n    \n    rest_join_block : POINT bgp rest_join_block\n    \n    rest_join_block : bgp rest_join_block\n    \n    bgp :  LKEY bgp UNION bgp rest_union_block RKEY\n    \n    bgp : bgp UNION bgp rest_union_block\n    \n    bgp : triple\n    \n    bgp : FILTER LPAR expression RPAR\n    \n    bgp : FILTER express_rel\n    \n    bgp : OPTIONAL LKEY group_graph_pattern RKEY\n    \n    bgp : LKEY join_block RKEY\n    \n    expression : express_rel LOGOP expression\n    \n    expression : express_rel\n    \n    expression : LPAR expression RPAR\n    \n    express_rel : express_arg RELOP express_rel\n    \n    express_rel : express_arg\n    \n    express_rel : LPAR express_rel RPAR\n    \n    express_rel : NEG LPAR expression RPAR\n    \n    express_rel : NEG express_rel\n    \n    express_arg : uri\n    \n    express_arg : VARIABLE\n    \n    express_arg : CONSTANT\n    \n    express_arg : NUMBER\n    \n    express_arg : NUMBER POINT NUMBER\n    \n    express_arg : REGEX LPAR express_arg COMA pattern_arg regex_flag\n    \n    regex_flag : RPAR\n    \n    regex_flag : COMA pattern_arg RPAR\n    \n    pattern_arg : CONSTANT\n    \n    express_arg : binary_func LPAR express_arg COMA express_arg RPAR\n    \n    express_arg : unary_func LPAR express_arg RPAR\n    \n    express_arg : UNARYOP express_arg\n    \n    express_arg : express_arg ARITOP express_arg\n    \n    express_arg : LPAR express_arg RPAR\n    \n    express_arg : express_arg RELOP express_arg\n    \n    express_arg : TRUE\n    \n    express_arg : FALSE\n    \n    ARITOP : PLUS\n    \n    ARITOP : MINUS\n    \n    ARITOP : TIMES\n    \n    ARITOP : DIV\n    \n    UNARYOP : PLUS\n    \n    UNARYOP : MINUS\n    \n    LOGOP : AND\n    \n    LOGOP : OR\n    \n    RELOP : EQUALS\n    \n    RELOP : LESS\n    \n    RELOP : LESSEQ\n    \n    RELOP : GREATER\n    \n    RELOP : GREATEREQ\n    \n    RELOP : NEQUALS\n    \n    binary_func : REGEX\n    \n    binary_func : SAMETERM\n    \n    binary_func : LANGMATCHES\n    \n    binary_func : CONSTANT\n    \n    binary_func : CONTAINS\n    \n    unary_func : BOUND\n    \n    unary_func : ISIRI\n    \n    unary_func : ISURI\n    \n    unary_func : ISBLANK\n    \n    unary_func : ISLITERAL\n    \n    unary_func : LANG\n    \n    unary_func : DATATYPE\n    \n    unary_func : STR\n    \n    unary_func : UPPERCASE\n    \n    unary_func : DOUBLE\n               | INTEGER\n               | DECIMAL\n               | FLOAT\n               | STRING\n               | BOOLEAN\n               | DATETIME\n               | NONPOSINT\n               | NEGATIVEINT\n               | LONG\n               | INT\n               | SHORT\n               | BYTE\n               | NONNEGINT\n               | UNSIGNEDLONG\n               | UNSIGNEDINT\n               | UNSIGNEDSHORT\n               | UNSIGNEDBYTE\n               | POSITIVEINT\n    \n    unary_func : ID COLON ID\n    \n    unary_func : uri\n    \n    unary_func : UCASE\n    \n    unary_func : LCASE\n    \n    var_list : var_list VARIABLE\n    \n    var_list : VARIABLE\n    \n    triple : subject predicate object\n    \n    predicate : ID\n    \n    predicate : uri\n    \n    predicate : VARIABLE\n    \n    subject : uri\n    \n    subject : VARIABLE\n    \n    object : uri\n    \n    object : VARIABLE\n    \n    object : CONSTANT\n    \n    object : DOUBLECONST\n    \n    object : DECIMALCONST\n    \n    object : NUMBER\n    \n    object : TRUE\n    \n    object : FALSE\n    '
    
_lr_action_items = {'PREFIX':([0,3,12,14,56,57,],[5,5,-14,-17,-15,-16,]),'SELECT':([0,2,3,4,11,12,14,56,57,],[-13,8,-13,-12,-11,-14,-17,-15,-16,]),'ASK':([0,2,3,4,11,12,14,56,57,],[-13,9,-13,-12,-11,-14,-17,-15,-16,]),'CONSTRUCT':([0,2,3,4,11,12,14,56,57,],[-13,10,-13,-12,-11,-14,-17,-15,-16,]),'$end':([1,6,7,15,17,18,28,29,31,34,35,58,59,60,61,62,65,74,144,146,153,243,249,250,263,264,265,],[0,-13,-13,-13,-19,-13,-13,-13,-27,-13,-29,-1,-2,-27,-26,-28,-3,-33,-18,-23,-32,-4,-30,-31,-22,-24,-25,]),'ID':([5,14,23,25,27,33,39,40,43,44,45,46,47,48,50,51,52,56,57,63,64,70,71,73,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,97,132,133,134,135,136,137,138,139,143,144,146,151,152,154,155,156,157,158,159,161,162,163,164,165,166,168,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,208,209,212,213,214,216,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,235,239,241,242,251,253,258,260,261,262,263,264,265,266,267,272,274,275,276,278,],[13,-17,13,13,56,-13,13,13,-13,-41,-42,13,-52,98,136,-139,-140,-15,-16,149,-20,13,-41,13,13,-43,13,-46,13,-47,13,13,98,-54,-61,98,-65,-66,-67,-68,98,-80,-81,-86,-87,13,13,-136,-137,-138,13,13,-21,-23,13,13,13,13,-41,-40,13,13,13,13,-49,-13,13,13,98,98,98,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,98,-64,98,98,98,-76,98,241,-135,-141,-142,-143,-144,-145,-146,-147,-148,149,248,-40,-45,-13,13,13,-51,-48,-41,-56,-53,-62,98,-88,-89,-78,-61,-60,98,-77,-69,98,-15,-55,-51,13,-63,98,-75,-79,-22,-24,-25,-50,-13,-44,-70,-71,-74,-72,]),'URI':([5,14,23,25,27,33,39,40,43,44,45,46,47,48,50,51,52,56,57,63,64,70,71,73,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,97,132,133,134,135,136,137,138,139,143,144,146,151,152,154,155,156,157,158,159,161,162,163,164,165,166,168,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,208,209,212,213,214,216,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,235,239,241,242,251,253,258,260,261,262,263,264,265,266,267,272,274,275,276,278,],[14,-17,14,14,57,-13,14,14,-13,-41,-42,14,-52,14,14,-139,-140,-15,-16,14,-20,14,-41,14,14,-43,14,-46,14,-47,14,14,14,-54,-61,14,-65,-66,-67,-68,14,-80,-81,-86,-87,14,14,-136,-137,-138,14,14,-21,-23,14,14,14,14,-41,-40,14,14,14,14,-49,-13,14,14,14,14,14,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,14,-64,14,14,14,-76,14,57,-135,-141,-142,-143,-144,-145,-146,-147,-148,14,57,-40,-45,-13,14,14,-51,-48,-41,-56,-53,-62,14,-88,-89,-78,-61,-60,14,-77,-69,14,-15,-55,-51,14,-63,14,-75,-79,-22,-24,-25,-50,-13,-44,-70,-71,-74,-72,]),'ORDER':([6,7,74,153,243,249,250,],[16,16,-33,-32,-4,-30,-31,]),'LIMIT':([6,7,15,17,18,29,31,34,35,62,74,144,146,153,243,249,250,263,264,265,],[-13,-13,30,-19,-13,30,-29,30,-29,-28,-33,-18,-23,-32,-4,-30,-31,-22,-24,-25,]),'OFFSET':([6,7,15,17,18,28,31,61,74,144,146,153,243,249,250,263,264,265,],[-13,-13,32,-19,32,32,-27,-26,-33,-18,-23,-32,-4,-30,-31,-22,-24,-25,]),'DISTINCT':([8,],[20,]),'ALL':([8,19,20,21,],[-13,37,-34,-35,]),'VARIABLE':([8,14,19,20,21,23,25,33,36,38,39,40,43,44,45,46,47,48,50,51,52,56,57,63,64,67,70,71,73,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,97,132,133,134,135,136,137,138,139,143,144,146,151,152,154,155,156,157,158,159,161,162,163,164,165,166,168,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,194,195,196,197,198,199,200,201,202,206,207,208,212,213,214,216,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,235,239,241,242,251,253,258,260,261,262,263,264,265,266,267,272,274,275,276,278,],[-13,-17,38,-34,-35,52,52,-13,67,-134,52,52,-13,-41,-42,52,-52,89,138,-139,-140,-15,-16,146,-20,-133,52,-41,52,52,-43,52,-46,52,-47,52,52,89,-54,-61,89,-65,-66,-67,-68,89,-80,-81,-86,-87,52,196,-136,-137,-138,52,52,-21,-23,52,52,52,52,-41,-40,52,52,52,52,-49,-13,52,52,89,89,89,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,89,-64,89,89,89,-76,89,-135,-141,-142,-143,-144,-145,-146,-147,-148,245,246,146,-40,-45,-13,52,52,-51,-48,-41,-56,-53,-62,89,-88,-89,-78,-61,-60,89,-77,-69,89,-15,-55,-51,52,-63,89,-75,-79,-22,-24,-25,-50,-13,-44,-70,-71,-74,-72,]),'WHERE':([9,10,24,26,36,37,38,67,140,],[22,-13,53,-6,66,68,-134,-133,-5,]),'LKEY':([9,10,14,22,23,39,40,43,44,45,46,47,49,53,56,57,66,68,70,71,73,75,76,77,78,79,80,81,82,83,85,86,88,89,90,91,96,97,134,139,151,152,154,155,156,157,158,159,161,162,163,164,165,166,185,190,194,195,196,197,198,199,200,201,202,212,213,214,216,218,219,220,221,222,224,225,229,230,231,233,235,241,242,251,253,258,261,262,266,267,272,274,275,276,278,],[23,25,-17,39,40,40,70,-13,-41,-42,83,-52,134,139,-15,-16,151,152,154,-41,83,40,-43,162,83,-46,83,-47,83,166,-54,-61,-65,-66,-67,-68,-80,-81,40,40,40,40,154,83,-41,-40,83,83,40,216,-49,-13,83,154,-64,-76,-135,-141,-142,-143,-144,-145,-146,-147,-148,-40,-45,-13,154,253,-51,-48,-41,-56,-53,-62,-78,-61,-60,-77,-69,-15,-55,-51,216,-63,-75,-79,-50,-13,-44,-70,-71,-74,-72,]),'COLON':([13,98,136,149,],[27,192,27,209,]),'EQUALS':([14,57,86,88,89,90,91,96,97,171,190,229,230,233,235,236,237,238,240,241,261,262,271,274,275,276,278,],[-17,-16,174,-65,-66,-67,-68,-80,-81,174,174,-78,174,174,-69,174,174,174,174,-15,-75,174,174,-70,-71,-74,-72,]),'LESS':([14,57,86,88,89,90,91,96,97,171,190,229,230,233,235,236,237,238,240,241,261,262,271,274,275,276,278,],[-17,-16,175,-65,-66,-67,-68,-80,-81,175,175,-78,175,175,-69,175,175,175,175,-15,-75,175,175,-70,-71,-74,-72,]),'LESSEQ':([14,57,86,88,89,90,91,96,97,171,190,229,230,233,235,236,237,238,240,241,261,262,271,274,275,276,278,],[-17,-16,176,-65,-66,-67,-68,-80,-81,176,176,-78,176,176,-69,176,176,176,176,-15,-75,176,176,-70,-71,-74,-72,]),'GREATER':([14,57,86,88,89,90,91,96,97,171,190,229,230,233,235,236,237,238,240,241,261,262,271,274,275,276,278,],[-17,-16,177,-65,-66,-67,-68,-80,-81,177,177,-78,177,177,-69,177,177,177,177,-15,-75,177,177,-70,-71,-74,-72,]),'GREATEREQ':([14,57,86,88,89,90,91,96,97,171,190,229,230,233,235,236,237,238,240,241,261,262,271,274,275,276,278,],[-17,-16,178,-65,-66,-67,-68,-80,-81,178,178,-78,178,178,-69,178,178,178,178,-15,-75,178,178,-70,-71,-74,-72,]),'NEQUALS':([14,57,86,88,89,90,91,96,97,171,190,229,230,233,235,236,237,238,240,241,261,262,271,274,275,276,278,],[-17,-16,179,-65,-66,-67,-68,-80,-81,179,179,-78,179,179,-69,179,179,179,179,-15,-75,179,179,-70,-71,-74,-72,]),'PLUS':([14,48,57,84,86,87,88,89,90,91,95,96,97,132,133,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,190,191,226,227,228,229,230,232,233,235,236,237,238,239,240,241,260,261,262,271,274,275,276,278,],[-17,132,-16,132,180,132,-65,-66,-67,-68,132,-80,-81,-86,-87,132,180,132,132,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,132,132,132,132,180,132,132,-88,-89,-78,180,132,180,-69,180,180,180,132,180,-15,132,-75,180,180,-70,-71,-74,-72,]),'MINUS':([14,48,57,84,86,87,88,89,90,91,95,96,97,132,133,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,190,191,226,227,228,229,230,232,233,235,236,237,238,239,240,241,260,261,262,271,274,275,276,278,],[-17,133,-16,133,181,133,-65,-66,-67,-68,133,-80,-81,-86,-87,133,181,133,133,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,133,133,133,133,181,133,133,-88,-89,-78,181,133,181,-69,181,181,181,133,181,-15,133,-75,181,181,-70,-71,-74,-72,]),'TIMES':([14,57,86,88,89,90,91,96,97,171,190,229,230,233,235,236,237,238,240,241,261,262,271,274,275,276,278,],[-17,-16,182,-65,-66,-67,-68,-80,-81,182,182,-78,182,182,-69,182,182,182,182,-15,-75,182,182,-70,-71,-74,-72,]),'DIV':([14,57,86,88,89,90,91,96,97,171,190,229,230,233,235,236,237,238,240,241,261,262,271,274,275,276,278,],[-17,-16,183,-65,-66,-67,-68,-80,-81,183,183,-78,183,183,-69,183,183,183,183,-15,-75,183,183,-70,-71,-74,-72,]),'UNION':([14,23,39,40,43,44,45,46,47,56,57,70,71,73,76,78,79,81,85,86,88,89,90,91,96,97,134,139,151,152,154,155,156,157,158,163,164,165,166,185,190,194,195,196,197,198,199,200,201,202,212,213,214,216,217,219,220,221,222,224,225,229,230,231,233,235,241,242,251,258,261,262,266,267,268,272,274,275,276,278,],[-17,-13,-13,-13,77,-41,-42,80,-52,-15,-16,-13,-41,159,-43,80,-46,-47,-54,-61,-65,-66,-67,-68,-80,-81,-13,-13,-13,-13,-13,159,-41,-40,-13,-49,218,80,-13,-64,-76,-135,-141,-142,-143,-144,-145,-146,-147,-148,-40,-45,218,-13,77,-51,-48,-41,-56,-53,-62,-78,-61,-60,-77,-69,-15,-55,-51,-63,-75,-79,-50,77,77,-44,-70,-71,-74,-72,]),'POINT':([14,23,39,40,43,44,45,46,47,55,56,57,70,71,73,75,76,78,79,81,85,86,88,89,90,91,96,97,134,139,143,151,152,154,155,156,157,158,163,164,165,166,185,190,194,195,196,197,198,199,200,201,202,204,212,213,214,216,219,220,221,222,224,225,229,230,231,233,235,241,242,251,258,261,262,266,267,272,274,275,276,278,],[-17,-13,-13,-13,-13,-41,-42,82,-52,143,-15,-16,-13,-41,82,161,-43,82,-46,-47,-54,-61,-65,-66,-67,186,-80,-81,-13,-13,143,-13,-13,-13,82,-41,-40,82,-49,-13,82,-13,-64,-76,-135,-141,-142,-143,-144,-145,-146,-147,-148,143,-40,-45,-13,-13,-51,-48,-41,-56,-53,-62,-78,-61,-60,-77,-69,-15,-55,-51,-63,-75,-79,-50,-13,-44,-70,-71,-74,-72,]),'FILTER':([14,23,39,40,43,44,45,46,47,56,57,70,71,73,75,76,78,79,80,81,82,83,85,86,88,89,90,91,96,97,134,139,151,152,154,155,156,157,158,159,161,162,163,164,165,166,185,190,194,195,196,197,198,199,200,201,202,212,213,214,216,218,219,220,221,222,224,225,229,230,231,233,235,241,242,251,253,258,261,262,266,267,272,274,275,276,278,],[-17,48,48,48,-13,-41,-42,48,-52,-15,-16,48,-41,48,48,-43,48,-46,48,-47,48,48,-54,-61,-65,-66,-67,-68,-80,-81,48,48,48,48,48,48,-41,-40,48,48,48,48,-49,-13,48,48,-64,-76,-135,-141,-142,-143,-144,-145,-146,-147,-148,-40,-45,-13,48,48,-51,-48,-41,-56,-53,-62,-78,-61,-60,-77,-69,-15,-55,-51,48,-63,-75,-79,-50,-13,-44,-70,-71,-74,-72,]),'OPTIONAL':([14,23,39,40,43,44,45,46,47,56,57,70,71,73,75,76,78,79,80,81,82,83,85,86,88,89,90,91,96,97,134,139,151,152,154,155,156,157,158,159,161,162,163,164,165,166,185,190,194,195,196,197,198,199,200,201,202,212,213,214,216,218,219,220,221,222,224,225,229,230,231,233,235,241,242,251,253,258,261,262,266,267,272,274,275,276,278,],[-17,49,49,49,-13,-41,-42,49,-52,-15,-16,49,-41,49,49,-43,49,-46,49,-47,49,49,-54,-61,-65,-66,-67,-68,-80,-81,49,49,49,49,49,49,-41,-40,49,49,49,49,-49,-13,49,49,-64,-76,-135,-141,-142,-143,-144,-145,-146,-147,-148,-40,-45,-13,49,49,-51,-48,-41,-56,-53,-62,-78,-61,-60,-77,-69,-15,-55,-51,49,-63,-75,-79,-50,-13,-44,-70,-71,-74,-72,]),'RKEY':([14,23,39,40,41,42,43,44,45,46,47,54,55,56,57,69,70,71,72,73,75,76,78,79,81,85,86,88,89,90,91,96,97,134,139,141,142,143,151,152,154,155,156,157,158,160,161,163,164,165,166,167,185,190,193,194,195,196,197,198,199,200,201,202,203,204,205,210,211,212,213,214,215,216,217,219,220,221,222,224,225,229,230,231,233,235,241,242,244,251,252,258,261,262,266,267,268,272,274,275,276,278,],[-17,-13,-13,-13,74,-36,-13,-41,-42,-13,-52,140,-13,-15,-16,153,-13,157,158,-13,-13,-43,-13,-46,-47,-54,-61,-65,-66,-67,-68,-80,-81,-13,-13,-7,-8,-13,-13,-13,-13,-13,212,-40,-13,-38,-13,-49,-13,-13,-13,222,-64,-76,242,-135,-141,-142,-143,-144,-145,-146,-147,-148,243,-13,-10,249,250,-40,-45,-13,-37,-13,-13,-51,-48,222,-56,-53,-62,-78,-61,-60,-77,-69,-15,-55,-9,266,267,-63,-75,-79,-50,-13,222,-44,-70,-71,-74,-72,]),'LPAR':([14,48,57,84,87,88,90,92,93,94,95,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,145,147,148,150,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,226,227,228,232,239,241,248,260,],[-17,84,-16,168,184,-130,-99,187,188,189,191,-97,-98,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-131,-132,-86,-87,206,207,208,-130,168,232,191,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,168,191,191,191,191,168,-88,-89,232,191,-15,-15,191,]),'CONSTANT':([14,48,56,57,84,87,95,132,133,135,136,137,138,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,226,227,228,232,239,259,260,273,],[-17,90,-15,-16,90,90,90,-86,-87,197,-136,-137,-138,90,90,90,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,90,90,90,90,90,90,-88,-89,90,90,270,90,270,]),'DOUBLECONST':([14,56,57,135,136,137,138,],[-17,-15,-16,198,-136,-137,-138,]),'DECIMALCONST':([14,56,57,135,136,137,138,],[-17,-15,-16,199,-136,-137,-138,]),'NUMBER':([14,30,32,48,56,57,84,87,95,132,133,135,136,137,138,168,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,191,226,227,228,232,239,260,],[-17,61,62,91,-15,-16,91,91,91,-86,-87,200,-136,-137,-138,91,91,91,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,91,235,91,91,91,91,91,-88,-89,91,91,91,]),'TRUE':([14,48,56,57,84,87,95,132,133,135,136,137,138,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,226,227,228,232,239,260,],[-17,96,-15,-16,96,96,96,-86,-87,201,-136,-137,-138,96,96,96,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,96,96,96,96,96,96,-88,-89,96,96,96,]),'FALSE':([14,48,56,57,84,87,95,132,133,135,136,137,138,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,226,227,228,232,239,260,],[-17,97,-15,-16,97,97,97,-86,-87,202,-136,-137,-138,97,97,97,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,97,97,97,97,97,97,-88,-89,97,97,97,]),'RPAR':([14,57,86,88,89,90,91,96,97,146,169,170,171,185,190,223,225,229,230,231,233,234,235,238,240,241,245,246,247,254,255,256,257,258,261,262,263,264,265,269,270,271,274,275,276,277,278,],[-17,-16,-61,-65,-66,-67,-68,-80,-81,-23,224,225,229,-64,-76,254,-62,-78,-61,-60,-77,258,-69,261,229,-15,263,264,265,-59,-58,-57,225,-63,-75,-79,-22,-24,-25,275,-73,276,-70,-71,-74,278,-72,]),'AND':([14,57,86,88,89,90,91,96,97,170,171,185,190,225,229,230,231,233,235,241,255,258,261,262,274,275,276,278,],[-17,-16,-61,-65,-66,-67,-68,-80,-81,227,-61,-64,-76,-62,-78,-61,-60,-77,-69,-15,227,-63,-75,-79,-70,-71,-74,-72,]),'OR':([14,57,86,88,89,90,91,96,97,170,171,185,190,225,229,230,231,233,235,241,255,258,261,262,274,275,276,278,],[-17,-16,-61,-65,-66,-67,-68,-80,-81,228,-61,-64,-76,-62,-78,-61,-60,-77,-69,-15,228,-63,-75,-79,-70,-71,-74,-72,]),'COMA':([14,57,88,89,90,91,96,97,190,229,233,235,236,237,241,261,262,269,270,274,275,276,278,],[-17,-16,-65,-66,-67,-68,-80,-81,-76,-78,-77,-69,259,260,-15,-75,-79,273,-73,-70,-71,-74,-72,]),'BY':([16,],[33,]),'DESC':([33,63,64,144,146,208,263,264,265,],[-13,145,-20,-21,-23,145,-22,-24,-25,]),'ASC':([33,63,64,144,146,208,263,264,265,],[-13,147,-20,-21,-23,147,-22,-24,-25,]),'BOUND':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,102,102,-20,102,102,102,-86,-87,-21,-23,102,102,102,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,102,102,102,102,102,102,102,-88,-89,102,102,102,-22,-24,-25,]),'ISIRI':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,103,103,-20,103,103,103,-86,-87,-21,-23,103,103,103,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,103,103,103,103,103,103,103,-88,-89,103,103,103,-22,-24,-25,]),'ISURI':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,104,104,-20,104,104,104,-86,-87,-21,-23,104,104,104,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,104,104,104,104,104,104,104,-88,-89,104,104,104,-22,-24,-25,]),'ISBLANK':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,105,105,-20,105,105,105,-86,-87,-21,-23,105,105,105,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,105,105,105,105,105,105,105,-88,-89,105,105,105,-22,-24,-25,]),'ISLITERAL':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,106,106,-20,106,106,106,-86,-87,-21,-23,106,106,106,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,106,106,106,106,106,106,106,-88,-89,106,106,106,-22,-24,-25,]),'LANG':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,107,107,-20,107,107,107,-86,-87,-21,-23,107,107,107,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,107,107,107,107,107,107,107,-88,-89,107,107,107,-22,-24,-25,]),'DATATYPE':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,108,108,-20,108,108,108,-86,-87,-21,-23,108,108,108,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,108,108,108,108,108,108,108,-88,-89,108,108,108,-22,-24,-25,]),'STR':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,109,109,-20,109,109,109,-86,-87,-21,-23,109,109,109,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,109,109,109,109,109,109,109,-88,-89,109,109,109,-22,-24,-25,]),'UPPERCASE':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,110,110,-20,110,110,110,-86,-87,-21,-23,110,110,110,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,110,110,110,110,110,110,110,-88,-89,110,110,110,-22,-24,-25,]),'DOUBLE':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,111,111,-20,111,111,111,-86,-87,-21,-23,111,111,111,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,111,111,111,111,111,111,111,-88,-89,111,111,111,-22,-24,-25,]),'INTEGER':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,112,112,-20,112,112,112,-86,-87,-21,-23,112,112,112,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,112,112,112,112,112,112,112,-88,-89,112,112,112,-22,-24,-25,]),'DECIMAL':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,113,113,-20,113,113,113,-86,-87,-21,-23,113,113,113,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,113,113,113,113,113,113,113,-88,-89,113,113,113,-22,-24,-25,]),'FLOAT':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,114,114,-20,114,114,114,-86,-87,-21,-23,114,114,114,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,114,114,114,114,114,114,114,-88,-89,114,114,114,-22,-24,-25,]),'STRING':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,115,115,-20,115,115,115,-86,-87,-21,-23,115,115,115,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,115,115,115,115,115,115,115,-88,-89,115,115,115,-22,-24,-25,]),'BOOLEAN':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,116,116,-20,116,116,116,-86,-87,-21,-23,116,116,116,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,116,116,116,116,116,116,116,-88,-89,116,116,116,-22,-24,-25,]),'DATETIME':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,117,117,-20,117,117,117,-86,-87,-21,-23,117,117,117,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,117,117,117,117,117,117,117,-88,-89,117,117,117,-22,-24,-25,]),'NONPOSINT':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,118,118,-20,118,118,118,-86,-87,-21,-23,118,118,118,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,118,118,118,118,118,118,118,-88,-89,118,118,118,-22,-24,-25,]),'NEGATIVEINT':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,119,119,-20,119,119,119,-86,-87,-21,-23,119,119,119,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,119,119,119,119,119,119,119,-88,-89,119,119,119,-22,-24,-25,]),'LONG':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,120,120,-20,120,120,120,-86,-87,-21,-23,120,120,120,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,120,120,120,120,120,120,120,-88,-89,120,120,120,-22,-24,-25,]),'INT':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,121,121,-20,121,121,121,-86,-87,-21,-23,121,121,121,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,121,121,121,121,121,121,121,-88,-89,121,121,121,-22,-24,-25,]),'SHORT':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,122,122,-20,122,122,122,-86,-87,-21,-23,122,122,122,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,122,122,122,122,122,122,122,-88,-89,122,122,122,-22,-24,-25,]),'BYTE':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,123,123,-20,123,123,123,-86,-87,-21,-23,123,123,123,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,123,123,123,123,123,123,123,-88,-89,123,123,123,-22,-24,-25,]),'NONNEGINT':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,124,124,-20,124,124,124,-86,-87,-21,-23,124,124,124,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,124,124,124,124,124,124,124,-88,-89,124,124,124,-22,-24,-25,]),'UNSIGNEDLONG':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,125,125,-20,125,125,125,-86,-87,-21,-23,125,125,125,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,125,125,125,125,125,125,125,-88,-89,125,125,125,-22,-24,-25,]),'UNSIGNEDINT':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,126,126,-20,126,126,126,-86,-87,-21,-23,126,126,126,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,126,126,126,126,126,126,126,-88,-89,126,126,126,-22,-24,-25,]),'UNSIGNEDSHORT':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,127,127,-20,127,127,127,-86,-87,-21,-23,127,127,127,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,127,127,127,127,127,127,127,-88,-89,127,127,127,-22,-24,-25,]),'UNSIGNEDBYTE':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,128,128,-20,128,128,128,-86,-87,-21,-23,128,128,128,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,128,128,128,128,128,128,128,-88,-89,128,128,128,-22,-24,-25,]),'POSITIVEINT':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,129,129,-20,129,129,129,-86,-87,-21,-23,129,129,129,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,129,129,129,129,129,129,129,-88,-89,129,129,129,-22,-24,-25,]),'UCASE':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,130,130,-20,130,130,130,-86,-87,-21,-23,130,130,130,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,130,130,130,130,130,130,130,-88,-89,130,130,130,-22,-24,-25,]),'LCASE':([33,48,63,64,84,87,95,132,133,144,146,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,208,226,227,228,232,239,260,263,264,265,],[-13,131,131,-20,131,131,131,-86,-87,-21,-23,131,131,131,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,131,131,131,131,131,131,131,-88,-89,131,131,131,-22,-24,-25,]),'NEG':([48,84,87,168,172,174,175,176,177,178,179,184,226,227,228,232,],[87,87,87,87,87,-90,-91,-92,-93,-94,-95,87,87,-88,-89,87,]),'REGEX':([48,84,87,95,132,133,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,226,227,228,232,239,260,],[92,92,92,92,-86,-87,92,92,92,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,92,92,92,92,92,92,-88,-89,92,92,92,]),'SAMETERM':([48,84,87,95,132,133,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,226,227,228,232,239,260,],[99,99,99,99,-86,-87,99,99,99,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,99,99,99,99,99,99,-88,-89,99,99,99,]),'LANGMATCHES':([48,84,87,95,132,133,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,226,227,228,232,239,260,],[100,100,100,100,-86,-87,100,100,100,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,100,100,100,100,100,100,-88,-89,100,100,100,]),'CONTAINS':([48,84,87,95,132,133,168,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,191,226,227,228,232,239,260,],[101,101,101,101,-86,-87,101,101,101,-90,-91,-92,-93,-94,-95,-82,-83,-84,-85,101,101,101,101,101,101,-88,-89,101,101,101,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parse_sparql':([0,],[1,]),'prefix_list':([0,3,],[2,11,]),'prefix':([0,3,],[3,3,]),'empty':([0,3,6,7,8,10,15,18,23,28,29,33,34,39,40,43,46,55,70,73,75,78,134,139,143,151,152,154,155,158,161,164,165,166,204,214,216,217,267,268,],[4,4,17,17,21,26,31,35,45,35,60,64,60,45,45,76,81,142,45,81,45,81,45,45,142,45,45,45,81,81,45,76,81,45,142,76,45,76,76,76,]),'query':([2,],[6,]),'construct_query':([2,],[7,]),'uri':([5,23,25,39,40,46,48,50,63,70,73,75,78,80,82,83,84,87,95,134,135,139,143,151,152,154,155,158,159,161,162,165,166,168,172,173,184,187,188,189,191,208,216,218,226,232,239,253,260,],[12,51,51,51,51,51,88,137,150,51,51,51,51,51,51,51,88,88,88,51,195,51,51,51,51,51,51,51,51,51,51,51,51,88,88,88,88,88,88,88,88,150,51,51,88,88,88,51,88,]),'order_by':([6,7,],[15,18,]),'distinct':([8,],[19,]),'template_block':([10,],[24,]),'limit':([15,29,34,],[28,59,65,]),'offset':([15,18,28,],[29,34,58,]),'var_list':([19,],[36,]),'group_graph_pattern':([23,39,134,139,151,152,],[41,69,193,203,210,211,]),'union_block':([23,39,40,70,134,139,151,152,154,166,216,],[42,42,72,72,42,42,42,42,72,72,72,]),'pjoin_block':([23,39,40,70,75,134,139,151,152,154,161,166,216,],[43,43,43,43,160,43,43,43,43,43,215,43,43,]),'join_block':([23,39,40,70,75,83,134,139,151,152,154,161,162,166,216,253,],[44,44,71,156,44,167,44,44,44,44,156,44,217,221,221,268,]),'bgp':([23,39,40,46,70,73,75,78,80,82,83,134,139,151,152,154,155,158,159,161,162,165,166,216,218,253,],[46,46,73,78,155,78,46,78,164,165,155,46,46,46,46,155,78,78,214,46,46,78,155,155,164,73,]),'triple':([23,25,39,40,46,70,73,75,78,80,82,83,134,139,143,151,152,154,155,158,159,161,162,165,166,216,218,253,],[47,55,47,47,47,47,47,47,47,47,47,47,47,47,204,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'subject':([23,25,39,40,46,70,73,75,78,80,82,83,134,139,143,151,152,154,155,158,159,161,162,165,166,216,218,253,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'temp_bgp':([25,],[54,]),'var_order_list':([33,],[63,]),'rest_union_block':([43,164,214,217,267,268,],[75,219,251,252,272,252,]),'rest_join_block':([46,73,78,155,158,165,],[79,79,163,79,213,220,]),'express_rel':([48,84,87,168,172,184,226,232,],[85,170,185,170,231,170,255,257,]),'express_arg':([48,84,87,95,168,172,173,184,187,188,189,191,226,232,239,260,],[86,171,86,190,171,230,233,171,236,237,238,240,86,171,262,271,]),'binary_func':([48,84,87,95,168,172,173,184,187,188,189,191,226,232,239,260,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'unary_func':([48,63,84,87,95,168,172,173,184,187,188,189,191,208,226,232,239,260,],[94,148,94,94,94,94,94,94,94,94,94,94,94,148,94,94,94,94,]),'UNARYOP':([48,84,87,95,168,172,173,184,187,188,189,191,226,232,239,260,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'predicate':([50,],[135,]),'rest_temp_bgp':([55,143,204,],[141,205,244,]),'desc_var':([63,208,],[144,247,]),'expression':([84,168,184,226,],[169,223,234,256,]),'RELOP':([86,171,190,230,233,236,237,238,240,262,271,],[172,172,239,172,239,239,239,239,239,239,239,]),'ARITOP':([86,171,190,230,233,236,237,238,240,262,271,],[173,173,173,173,173,173,173,173,173,173,173,]),'object':([135,],[194,]),'LOGOP':([170,255,],[226,226,]),'pattern_arg':([259,273,],[269,277,]),'regex_flag':([269,],[274,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> parse_sparql","S'",1,None,None,None),
  ('parse_sparql -> prefix_list query order_by limit offset','parse_sparql',5,'p_parse_sparql_0','parser_v1_0.py',187),
  ('parse_sparql -> prefix_list query order_by offset limit','parse_sparql',5,'p_parse_sparql_1','parser_v1_0.py',198),
  ('parse_sparql -> prefix_list construct_query order_by offset limit','parse_sparql',5,'p_parse_sparql_2','parser_v1_0.py',209),
  ('construct_query -> CONSTRUCT template_block WHERE LKEY group_graph_pattern RKEY','construct_query',6,'p_construct_query_0','parser_v1_0.py',217),
  ('template_block -> LKEY temp_bgp RKEY','template_block',3,'p_template_block_0','parser_v1_0.py',254),
  ('template_block -> empty','template_block',1,'p_template_block_1','parser_v1_0.py',261),
  ('temp_bgp -> triple rest_temp_bgp','temp_bgp',2,'p_temp_bgp_0','parser_v1_0.py',268),
  ('rest_temp_bgp -> empty','rest_temp_bgp',1,'p_rest_temp_bgp_0','parser_v1_0.py',275),
  ('rest_temp_bgp -> POINT triple rest_temp_bgp','rest_temp_bgp',3,'p_rest_temp_bgp_1','parser_v1_0.py',282),
  ('rest_temp_bgp -> POINT rest_temp_bgp','rest_temp_bgp',2,'p_rest_temp_bgp_2','parser_v1_0.py',289),
  ('prefix_list -> prefix prefix_list','prefix_list',2,'p_prefix_list','parser_v1_0.py',296),
  ('prefix_list -> empty','prefix_list',1,'p_empty_prefix_list','parser_v1_0.py',303),
  ('empty -> <empty>','empty',0,'p_empty','parser_v1_0.py',310),
  ('prefix -> PREFIX uri','prefix',2,'p_prefix','parser_v1_0.py',317),
  ('uri -> ID COLON ID','uri',3,'p_uri_0','parser_v1_0.py',324),
  ('uri -> ID COLON URI','uri',3,'p_uri_1','parser_v1_0.py',331),
  ('uri -> URI','uri',1,'p_uri_2','parser_v1_0.py',338),
  ('order_by -> ORDER BY var_order_list desc_var','order_by',4,'p_order_by_0','parser_v1_0.py',345),
  ('order_by -> empty','order_by',1,'p_order_by_1','parser_v1_0.py',352),
  ('var_order_list -> empty','var_order_list',1,'p_var_order_list_0','parser_v1_0.py',359),
  ('var_order_list -> var_order_list desc_var','var_order_list',2,'p_var_order_list_1','parser_v1_0.py',366),
  ('desc_var -> DESC LPAR VARIABLE RPAR','desc_var',4,'p_desc_var_0','parser_v1_0.py',373),
  ('desc_var -> VARIABLE','desc_var',1,'p_desc_var_1','parser_v1_0.py',380),
  ('desc_var -> ASC LPAR VARIABLE RPAR','desc_var',4,'p_desc_var_2','parser_v1_0.py',387),
  ('desc_var -> unary_func LPAR desc_var RPAR','desc_var',4,'p_desc_var_3','parser_v1_0.py',394),
  ('limit -> LIMIT NUMBER','limit',2,'p_limit_0','parser_v1_0.py',401),
  ('limit -> empty','limit',1,'p_limit_1','parser_v1_0.py',408),
  ('offset -> OFFSET NUMBER','offset',2,'p_offset_0','parser_v1_0.py',415),
  ('offset -> empty','offset',1,'p_offset_1','parser_v1_0.py',422),
  ('query -> SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY','query',7,'p_query_0','parser_v1_0.py',429),
  ('query -> SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY','query',7,'p_query_1','parser_v1_0.py',436),
  ('query -> ASK WHERE LKEY group_graph_pattern RKEY','query',5,'p_query_2','parser_v1_0.py',443),
  ('query -> ASK LKEY group_graph_pattern RKEY','query',4,'p_query_3','parser_v1_0.py',450),
  ('distinct -> DISTINCT','distinct',1,'p_distinct_0','parser_v1_0.py',457),
  ('distinct -> empty','distinct',1,'p_distinct_1','parser_v1_0.py',464),
  ('group_graph_pattern -> union_block','group_graph_pattern',1,'p_ggp_0','parser_v1_0.py',471),
  ('union_block -> pjoin_block rest_union_block POINT pjoin_block','union_block',4,'p_union_block_0','parser_v1_0.py',478),
  ('union_block -> pjoin_block rest_union_block pjoin_block','union_block',3,'p_union_block_1','parser_v1_0.py',487),
  ('union_block -> pjoin_block rest_union_block','union_block',2,'p_union_block_2','parser_v1_0.py',499),
  ('pjoin_block -> LKEY join_block RKEY','pjoin_block',3,'p_ppjoin_block_0','parser_v1_0.py',506),
  ('pjoin_block -> join_block','pjoin_block',1,'p_ppjoin_block_1','parser_v1_0.py',513),
  ('pjoin_block -> empty','pjoin_block',1,'p_ppjoin_block_2','parser_v1_0.py',520),
  ('rest_union_block -> empty','rest_union_block',1,'p_rest_union_block_0','parser_v1_0.py',527),
  ('rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block','rest_union_block',6,'p_rest_union_block_1','parser_v1_0.py',534),
  ('join_block -> LKEY union_block RKEY rest_join_block','join_block',4,'p_join_block_0','parser_v1_0.py',541),
  ('join_block -> bgp rest_join_block','join_block',2,'p_join_block_1','parser_v1_0.py',553),
  ('rest_join_block -> empty','rest_join_block',1,'p_rest_join_block_0','parser_v1_0.py',560),
  ('rest_join_block -> POINT bgp rest_join_block','rest_join_block',3,'p_rest_join_block_1','parser_v1_0.py',567),
  ('rest_join_block -> bgp rest_join_block','rest_join_block',2,'p_rest_join_block_2','parser_v1_0.py',574),
  ('bgp -> LKEY bgp UNION bgp rest_union_block RKEY','bgp',6,'p_bgp_0','parser_v1_0.py',581),
  ('bgp -> bgp UNION bgp rest_union_block','bgp',4,'p_bgp_01','parser_v1_0.py',589),
  ('bgp -> triple','bgp',1,'p_bgp_1','parser_v1_0.py',597),
  ('bgp -> FILTER LPAR expression RPAR','bgp',4,'p_bgp_2','parser_v1_0.py',604),
  ('bgp -> FILTER express_rel','bgp',2,'p_bgp_3','parser_v1_0.py',611),
  ('bgp -> OPTIONAL LKEY group_graph_pattern RKEY','bgp',4,'p_bgp_4','parser_v1_0.py',618),
  ('bgp -> LKEY join_block RKEY','bgp',3,'p_bgp_6','parser_v1_0.py',632),
  ('expression -> express_rel LOGOP expression','expression',3,'p_expression_0','parser_v1_0.py',642),
  ('expression -> express_rel','expression',1,'p_expression_1','parser_v1_0.py',649),
  ('expression -> LPAR expression RPAR','expression',3,'p_expression_2','parser_v1_0.py',656),
  ('express_rel -> express_arg RELOP express_rel','express_rel',3,'p_express_rel_0','parser_v1_0.py',663),
  ('express_rel -> express_arg','express_rel',1,'p_express_rel_1','parser_v1_0.py',670),
  ('express_rel -> LPAR express_rel RPAR','express_rel',3,'p_express_rel_2','parser_v1_0.py',677),
  ('express_rel -> NEG LPAR expression RPAR','express_rel',4,'p_express_rel_3','parser_v1_0.py',684),
  ('express_rel -> NEG express_rel','express_rel',2,'p_express_rel_4','parser_v1_0.py',691),
  ('express_arg -> uri','express_arg',1,'p_express_arg_0','parser_v1_0.py',698),
  ('express_arg -> VARIABLE','express_arg',1,'p_express_arg_1','parser_v1_0.py',705),
  ('express_arg -> CONSTANT','express_arg',1,'p_express_arg_2','parser_v1_0.py',712),
  ('express_arg -> NUMBER','express_arg',1,'p_express_arg_3','parser_v1_0.py',736),
  ('express_arg -> NUMBER POINT NUMBER','express_arg',3,'p_express_arg_03','parser_v1_0.py',743),
  ('express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag','express_arg',6,'p_express_arg_4','parser_v1_0.py',751),
  ('regex_flag -> RPAR','regex_flag',1,'p_regex_flags_0','parser_v1_0.py',758),
  ('regex_flag -> COMA pattern_arg RPAR','regex_flag',3,'p_regex_flags_1','parser_v1_0.py',765),
  ('pattern_arg -> CONSTANT','pattern_arg',1,'p_pattern_arg_0','parser_v1_0.py',772),
  ('express_arg -> binary_func LPAR express_arg COMA express_arg RPAR','express_arg',6,'p_express_arg_5','parser_v1_0.py',779),
  ('express_arg -> unary_func LPAR express_arg RPAR','express_arg',4,'p_express_arg_6','parser_v1_0.py',786),
  ('express_arg -> UNARYOP express_arg','express_arg',2,'p_express_arg_7','parser_v1_0.py',793),
  ('express_arg -> express_arg ARITOP express_arg','express_arg',3,'p_express_arg_8','parser_v1_0.py',800),
  ('express_arg -> LPAR express_arg RPAR','express_arg',3,'p_express_arg_9','parser_v1_0.py',807),
  ('express_arg -> express_arg RELOP express_arg','express_arg',3,'p_express_arg_10','parser_v1_0.py',814),
  ('express_arg -> TRUE','express_arg',1,'p_express_arg_11','parser_v1_0.py',821),
  ('express_arg -> FALSE','express_arg',1,'p_express_arg_12','parser_v1_0.py',828),
  ('ARITOP -> PLUS','ARITOP',1,'p_arit_op_0','parser_v1_0.py',835),
  ('ARITOP -> MINUS','ARITOP',1,'p_arit_op_1','parser_v1_0.py',842),
  ('ARITOP -> TIMES','ARITOP',1,'p_arit_op_2','parser_v1_0.py',849),
  ('ARITOP -> DIV','ARITOP',1,'p_arit_op_3','parser_v1_0.py',856),
  ('UNARYOP -> PLUS','UNARYOP',1,'p_unaryarit_op_1','parser_v1_0.py',863),
  ('UNARYOP -> MINUS','UNARYOP',1,'p_unaryarit_op_2','parser_v1_0.py',870),
  ('LOGOP -> AND','LOGOP',1,'p_logical_op_0','parser_v1_0.py',877),
  ('LOGOP -> OR','LOGOP',1,'p_logical_op_1','parser_v1_0.py',884),
  ('RELOP -> EQUALS','RELOP',1,'p_relational_op_0','parser_v1_0.py',891),
  ('RELOP -> LESS','RELOP',1,'p_relational_op_1','parser_v1_0.py',898),
  ('RELOP -> LESSEQ','RELOP',1,'p_relational_op_2','parser_v1_0.py',905),
  ('RELOP -> GREATER','RELOP',1,'p_relational_op_3','parser_v1_0.py',912),
  ('RELOP -> GREATEREQ','RELOP',1,'p_relational_op_4','parser_v1_0.py',919),
  ('RELOP -> NEQUALS','RELOP',1,'p_relational_op_5','parser_v1_0.py',926),
  ('binary_func -> REGEX','binary_func',1,'p_binary_0','parser_v1_0.py',933),
  ('binary_func -> SAMETERM','binary_func',1,'p_binary_1','parser_v1_0.py',940),
  ('binary_func -> LANGMATCHES','binary_func',1,'p_binary_2','parser_v1_0.py',947),
  ('binary_func -> CONSTANT','binary_func',1,'p_binary_3','parser_v1_0.py',954),
  ('binary_func -> CONTAINS','binary_func',1,'p_binary_4','parser_v1_0.py',961),
  ('unary_func -> BOUND','unary_func',1,'p_unary_0','parser_v1_0.py',968),
  ('unary_func -> ISIRI','unary_func',1,'p_unary_1','parser_v1_0.py',975),
  ('unary_func -> ISURI','unary_func',1,'p_unary_2','parser_v1_0.py',982),
  ('unary_func -> ISBLANK','unary_func',1,'p_unary_3','parser_v1_0.py',989),
  ('unary_func -> ISLITERAL','unary_func',1,'p_unary_4','parser_v1_0.py',996),
  ('unary_func -> LANG','unary_func',1,'p_unary_5','parser_v1_0.py',1003),
  ('unary_func -> DATATYPE','unary_func',1,'p_unary_6','parser_v1_0.py',1010),
  ('unary_func -> STR','unary_func',1,'p_unary_7','parser_v1_0.py',1017),
  ('unary_func -> UPPERCASE','unary_func',1,'p_unary_8','parser_v1_0.py',1024),
  ('unary_func -> DOUBLE','unary_func',1,'p_unary_9','parser_v1_0.py',1031),
  ('unary_func -> INTEGER','unary_func',1,'p_unary_9','parser_v1_0.py',1032),
  ('unary_func -> DECIMAL','unary_func',1,'p_unary_9','parser_v1_0.py',1033),
  ('unary_func -> FLOAT','unary_func',1,'p_unary_9','parser_v1_0.py',1034),
  ('unary_func -> STRING','unary_func',1,'p_unary_9','parser_v1_0.py',1035),
  ('unary_func -> BOOLEAN','unary_func',1,'p_unary_9','parser_v1_0.py',1036),
  ('unary_func -> DATETIME','unary_func',1,'p_unary_9','parser_v1_0.py',1037),
  ('unary_func -> NONPOSINT','unary_func',1,'p_unary_9','parser_v1_0.py',1038),
  ('unary_func -> NEGATIVEINT','unary_func',1,'p_unary_9','parser_v1_0.py',1039),
  ('unary_func -> LONG','unary_func',1,'p_unary_9','parser_v1_0.py',1040),
  ('unary_func -> INT','unary_func',1,'p_unary_9','parser_v1_0.py',1041),
  ('unary_func -> SHORT','unary_func',1,'p_unary_9','parser_v1_0.py',1042),
  ('unary_func -> BYTE','unary_func',1,'p_unary_9','parser_v1_0.py',1043),
  ('unary_func -> NONNEGINT','unary_func',1,'p_unary_9','parser_v1_0.py',1044),
  ('unary_func -> UNSIGNEDLONG','unary_func',1,'p_unary_9','parser_v1_0.py',1045),
  ('unary_func -> UNSIGNEDINT','unary_func',1,'p_unary_9','parser_v1_0.py',1046),
  ('unary_func -> UNSIGNEDSHORT','unary_func',1,'p_unary_9','parser_v1_0.py',1047),
  ('unary_func -> UNSIGNEDBYTE','unary_func',1,'p_unary_9','parser_v1_0.py',1048),
  ('unary_func -> POSITIVEINT','unary_func',1,'p_unary_9','parser_v1_0.py',1049),
  ('unary_func -> ID COLON ID','unary_func',3,'p_unary_10','parser_v1_0.py',1056),
  ('unary_func -> uri','unary_func',1,'p_unary_11','parser_v1_0.py',1063),
  ('unary_func -> UCASE','unary_func',1,'p_unary_12','parser_v1_0.py',1070),
  ('unary_func -> LCASE','unary_func',1,'p_unary_13','parser_v1_0.py',1077),
  ('var_list -> var_list VARIABLE','var_list',2,'p_var_list','parser_v1_0.py',1084),
  ('var_list -> VARIABLE','var_list',1,'p_single_var_list','parser_v1_0.py',1091),
  ('triple -> subject predicate object','triple',3,'p_triple_0','parser_v1_0.py',1098),
  ('predicate -> ID','predicate',1,'p_predicate_rdftype','parser_v1_0.py',1105),
  ('predicate -> uri','predicate',1,'p_predicate_uri','parser_v1_0.py',1118),
  ('predicate -> VARIABLE','predicate',1,'p_predicate_var','parser_v1_0.py',1125),
  ('subject -> uri','subject',1,'p_subject_uri','parser_v1_0.py',1132),
  ('subject -> VARIABLE','subject',1,'p_subject_variable','parser_v1_0.py',1139),
  ('object -> uri','object',1,'p_object_uri','parser_v1_0.py',1146),
  ('object -> VARIABLE','object',1,'p_object_variable','parser_v1_0.py',1153),
  ('object -> CONSTANT','object',1,'p_object_constant_0','parser_v1_0.py',1160),
  ('object -> DOUBLECONST','object',1,'p_object_constant_1','parser_v1_0.py',1184),
  ('object -> DECIMALCONST','object',1,'p_object_constant_2','parser_v1_0.py',1194),
  ('object -> NUMBER','object',1,'p_object_constant_3','parser_v1_0.py',1204),
  ('object -> TRUE','object',1,'p_object_constant_4','parser_v1_0.py',1214),
  ('object -> FALSE','object',1,'p_object_constant_5','parser_v1_0.py',1221),
]
